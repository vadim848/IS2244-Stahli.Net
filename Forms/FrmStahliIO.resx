<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAATMbAAA1HAAENh4AADgeAAU3IAAJOiMADj4nAA4+KAAAQSIAAEUkAABJJgAGRSgABUoqABBB
        KgAQRCwAEUguAABRKgAAUywAAFovAB1INAAfTTcAAFwwABBdOQAgUjsAAGAyAAFlNQANYzoAAGo4AABt
        OQAAdj0AAHk/AAB7QAAAfUEAJWdIACZ7UwBHalkASWtbAEhtXABJc2AAWXlqAF9/cQABgEIAB4lKAAaO
        TQARgEoAAZBKAACSTAAAlEwAAJtQAAGdUgABn1UABp5VAAifVgAAoVUAAaVWAACnWAAIploAAapYAAWo
        WgABrVkAB65eAAisXgAToVwAA7BbAACzXAABtV0AAbpfAAKuYQALrmAABLFhAAa0YwAGtWUACrNjAA2z
        YgAKtGQADbhlAAa3agAEt2wAB7hrAA28awATvGkAFrptAAa8dQAKvnMACr93AAa9eAAlrmsAIr91ACa+
        dAAounQALb14AE+BaQBdi3UAUJp3AGGFdAAHwGYADMBuABHBbwAKwnEAC8RwAA3HcgAMy3YADMx3AAfA
        fQAKwHgAC8V5AArDfgALyHkACs14AAvIfgALzn4AGcR0ABLNdwATzngAG897AAvQdwAK0XgAC9R/ABzQ
        fAAiwHYAJcd7ACXIewAwwn0AT7mFAGGviQBkt48ACseGAAvKggAKyIQAC86HAAvKiAALzYoAC9GCAA/V
        gAAL0YQAC9qAAAvegQAL2oUAC9KJAAvWigAL2IgADtyJAAvejAAY3YYAKc6BADfKhQA6zokAKN2KADXY
        jAAL4oIAC+KGAAzgigAL5ooAC+KOAAvkjQAL6ogAC+6LAAvwjwAL7JEAGOaXABnnmAAL8JEAC/CUAA7y
        lQAL8pgAD/GbAAvxngAP8ZwAEPOfAC7sngAX7qAAGO6hAAvyogAO8aMADPGkAA3yrgAR86AAFPKiAA7y
        tQAW8rIAFfSxABLxtAAj9LoAJPS7AC71vAA087MANfS1ADX1ugAw9b0ANvW8AEHDhQBOyI4AQdSPAE/M
        kQBQzJAAUs+VAEHUkABJ2JYATtuZAFTSlwBV05gAZNOdAEfhmABI4ZkAQOqeAFbnowBP9bkAW/OyAFD1
        ugBg6qkAF/HHABjxyAAc8tYAJvPPACv1zAAs9c0AJ/PQADb06QBb98wAXPfNAEP20wBE9tQAVvfVAF73
        0wBx98EAcvjPAH/4yQBg99QAc/jQAEb25gBA9fIAX/j2AGf46wBp+OwAbfn3AIX63gCQ+t0AivrlAIz6
        5gCA+ekAh/r5AIj6+QCa+/oAofvkAKf76wCo++sApfv3AKb7+ACx+/IAvPzxAL77+wC//PsAy/z4AMz8
        +AD///8AAAAAAAAAAAAAJxgPDxUmAAAAAAAAAAAAAAAAAAAAXQ0KERodHRkLAgMoAAAAAAAAAAAAAAAX
        ER4zTlZoaFZOMxwECAAAAAAAAAAAABkcNlN/g4SEhISDf1MzEQEAAAAAAAAAHR9Ea4GCi4yMjIyLgoFr
        RBYBAAAAAAAtIERrgIeNj5qbm5qPjYeAa0QRBwAAAH0hN1VuhYqbn6Ojo6Ofm4qFbmkzBCgAACwwTWpv
        ipmipaetraelopmKb2pPHAMAAC84VGx2l56lr7Czs7CvpZ6XdmxUMgIAfDFGY2eInKOuttPV1dS2rqOc
        iGdURgskVzZIY22Jnaa01trn59rZtKidiXRjSBkUSjhIY3SWpLXX5ujr6+jm2LSklnVjSBwGTDpIY3WX
        qbfd6fHz8/Lq3rixl3VkSBwGWTxHY22Ysrnf8Pf7/Pjw372ymG1kSBkUw0FGYWaOq7zg7vn9/vnv5L6s
        jmdhRgslAEM8UGWGoLrb7PX6+vbs3LuhhmVQMgIAAGA8SWJxkKrP4u309O3l0aqQcmJLHAUAAMpCPFJw
        c5TN0OHj4+HQzZR3cFIyBCkAAABROj1YeZGVy87S0s7MlZF6eD4RDgAAAAAAQDdFe5KTwcbHx8bFk5J7
        RRYDAAAAAAAAADgxO1vCxMjJycjEwls0EgQAAAAAAAAAAAA/LjA5Wr/AwL9aNR0JEAAAAAAAAAAAAAAA
        fisgHyEqIB0TCgxfAAAAAAAAAAAAAAAAAAAAXiMbGyJcAAAAAAAAAAAA/4H/APwAPwD4AB8A8AAPAOAA
        BwDAAAMAgAABAIAAAQCAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABAIAAAQCAAAEAwAADAOAA
        BwDwAA8A+AAfAPwAPwD/gf8A
</value>
  </data>
</root>